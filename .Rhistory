head(d)
d$Customer.Type[d$Customer.Type=="disloyal Customer"]<-"Disloyal Customer"
View(d)
cor(d)
corr_matrix <- cor(d)
corr_matrix <- cor(d)
d_numeric <- d[sapply(d, is.numeric)]
corr_matrix <- cor(d_numeric)
print(corr_matrix)
corrplot(cor_matrix, method = "square")
corrplot(corr_matrix, method = "square")
corplot(corr_matrix, method = "square")
library(corrplot)
corplot(corr_matrix, method = "square")
corrplot(corr_matrix, method = "square")
d_numeric <- d[,c('Gender','Customer.Type','Age','Type.of.Travel','Class','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes','Before.flight.avg','After.flight.avg','Total.flight.avg')]
corr_matrix <- cor(d_numeric)
print(corr_matrix)
corrplot(corr_matrix, method = "square")
corrplot(corr_matrix, method = "square")
subset_cor_matrix <- corr_matrix[c("Total.flight.avg"), c('Gender','Customer.Type','Age','Type.of.Travel','Class','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes')]
subset_cor_matrix <- corr_matrix[c("Total.flight.avg"), c('Age','Type.of.Travel','Class','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes')]
subset_cor_matrix <- corr_matrix[c("Total.flight.avg"), c('Class','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes')]
d_numeric <- d[,c('Gender','Customer.Type','Age','Type.of.Travel','Class','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes','Before.flight.avg','After.flight.avg','Total.flight.avg')]
cor_matrix <- cor(d_numeric)
d_numeric <- d[,c('Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes','Before.flight.avg','After.flight.avg','Total.flight.avg')]
cor_matrix <- cor(d_numeric)
View(corr_matrix)
d_numeric <- d[,c('Age','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes','Before.flight.avg','After.flight.avg','Total.flight.avg')]
cor_matrix <- cor(d_numeric)
subset_cor_matrix <- cor_matrix[c("Total.flight.avg"), c('Age','Flight.Distance','Inflight.wifi.service','Departure.Arrival.time.convenient','Ease.of.Online.booking','Gate.location','Online.boarding','Seat.comfort','On.board.service','Leg.room.service','Baggage.handling','Checkin.service','Inflight.service','Cleanliness','Departure.Delay.in.Minutes','Arrival.Delay.in.Minutes')]
print(subset_cor_matrix)
corrplot(subset_cor_matrix, method = "square")
print(subset_cor_matrix)
table(d$Class)
prop.table(table(d$Class))
barplot(table(d$Class), main = "Class Distribution", xlab = "Class", ylab = "Count", col = "lightblue")
model_class <- lm(Satisfaction ~ Class * Inflight.wifi.service + Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking + Class * Gate.location + Class * Online.boarding + Class * Seat.comfort + Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling + Class * Checkin.service + Class * Inflight.service + Class * Cleanliness + Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d)
model_class <- lm(satisfaction.category ~ Class * Inflight.wifi.service + Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking + Class * Gate.location + Class * Online.boarding + Class * Seat.comfort + Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling + Class * Checkin.service + Class * Inflight.service + Class * Cleanliness + Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d)
# Check for multicollinearity
library(car)
install.packages(car)
install.packages("car")
install.packages("car")
library(car)
# Check for multicollinearity
install.packages("carData")
library(car)
library(car)
vif_model <- lm(satisfaction.category ~ Class + Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service +
Baggage.handling + Checkin.service +
Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes,
data = d)
model_class <- glm(satisfaction.category ~ Class * Inflight.wifi.service +
Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking +
Class * Gate.location + Class * Online.boarding + Class * Seat.comfort +
Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling +
Class * Checkin.service + Class * Inflight.service + Class * Cleanliness +
Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d)
d_clean <- na.omit(d)
model_class <- glm(satisfaction.category ~ Class * Inflight.wifi.service +
Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking +
Class * Gate.location + Class * Online.boarding + Class * Seat.comfort +
Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling +
Class * Checkin.service + Class * Inflight.service + Class * Cleanliness +
Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d)
model_class <- glm(satisfaction.category ~ Class * Inflight.wifi.service +
Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking +
Class * Gate.location + Class * Online.boarding + Class * Seat.comfort +
Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling +
Class * Checkin.service + Class * Inflight.service + Class * Cleanliness +
Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d_clean)
model_class <- multinom(satisfaction.category ~ Class * Inflight.wifi.service +
Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking +
Class * Gate.location + Class * Online.boarding + Class * Seat.comfort +
Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling +
Class * Checkin.service + Class * Inflight.service + Class * Cleanliness +
Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d_clean)
install.packages("nnet")
library("nnet")
model_class <- multinom(satisfaction.category ~ Class * Inflight.wifi.service +
Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking +
Class * Gate.location + Class * Online.boarding + Class * Seat.comfort +
Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling +
Class * Checkin.service + Class * Inflight.service + Class * Cleanliness +
Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d_clean)
table(d_clean$satisfaction.category)
d$satisfaction.category <- cut(d$Total.flight.avg,
breaks = c(0, 2, 3, 4, 5),  # Specific thresholds
labels = c("Dissatisfied", "Neutral", "Satisfied", "Strongly Satisfied"),
right = FALSE)
table(d$satisfaction.category)
d_clean <- na.omit(d)
model_class <- multinom(satisfaction.category ~ Class * Inflight.wifi.service +
Class * Departure.Arrival.time.convenient + Class * Ease.of.Online.booking +
Class * Gate.location + Class * Online.boarding + Class * Seat.comfort +
Class * On.board.service + Class * Leg.room.service + Class * Baggage.handling +
Class * Checkin.service + Class * Inflight.service + Class * Cleanliness +
Class * Departure.Delay.in.Minutes + Class * Arrival.Delay.in.Minutes, data = d_clean)
View(cor_matrix)
summary(model_class)
summary(model_class)
library(ggplot2)
coef_data <- as.data.frame(summary(model_class)$coefficients)
coef_data$Variable <- rownames(coef_data)
ggplot(coef_data, aes(x = Variable, y = Estimate)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Coefficients du Modèle de Satisfaction",
x = "Variables",
y = "Estimation des Coefficients")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
coef_data <- as.data.frame(summary(model_class)$coefficients)
coef_data$Variable <- rownames(coef_data)
ggplot(coef_data, aes(x = Variable, y = Estimate)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Coefficients du Modèle de Satisfaction",
x = "Variables",
y = "Estimation des Coefficients")
rm(coef_data, corr_matrix, model_class, vif_model, subset_cor_matrix)
library(dplyr)
library(dplyr)
chi_square <- table(d_clean$Class, d_clean$satisfaction_category)
chi_square <- table(d_clean$Class, d_clean$satisfaction.category)
print(chi_square)
chi_square_result <- chisq.test(chi_square)
print(chi_square_result)
data$Class <- as.factor(data$Class)
d_clean$Class <- as.factor(d_clean$Class)
d_clean$Gender <- as.factor(d_clean$Gender)
d_clean$Age <- as.factor(d_clean$Age)
model_class <- lm(satisfaction.category ~ Age + FlightDistance + Class + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_clean)
model_class <- lm(satisfaction.category ~ Age + Flight.Distance + Class + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_clean)
model_class <- multinom(satisfaction.category ~ Age + Flight.Distance + Class + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_clean)
summary(model_class)
summary(model_class)
summary(model_class)
d$Range.Age <- cut(d$Age,
breaks = c(8, 18, 31, 61, 100),  # Define specific thresholds
labels = c("Kids", "Young Adults", "Adults", "Senior"),
right = FALSE)  # Indicates that the intervals are left-inclusive
d_clean$Range.Age <- cut(d$Age,
breaks = c(8, 18, 31, 61, 100),  # Define specific thresholds
labels = c("Kids", "Young Adults", "Adults", "Senior"),
right = FALSE)  # Indicates that the intervals are left-inclusive
d_clean <- na.omit(d)
model_class <- multinom(satisfaction.category ~ Range.Age + Flight.Distance + Class + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_clean)
summary(model_class)
model_class_eco <- multinom(satisfaction.category ~ Range.Age + Flight.Distance + Class$Eco + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_clean)
d_eco <- d_clean[d_clean$Class == "Eco", ]
model_class_eco <- multinom(satisfaction.category ~ Range.Age + Flight.Distance + Class + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_eco)
model_class_eco <- multinom(satisfaction.category ~ Range.Age + Flight.Distance + Gender+ Inflight.wifi.service +
Departure.Arrival.time.convenient + Ease.of.Online.booking +
Gate.location + Online.boarding + Seat.comfort +
On.board.service + Leg.room.service + Baggage.handling +
Checkin.service + Inflight.service + Cleanliness +
Departure.Delay.in.Minutes + Arrival.Delay.in.Minutes, data = d_eco)
summary(model_class_eco)
library(ggplot2)
ggplot(d_clean, aes(x = Range.Age, fill = Satisfaction)) +
geom_histogram(binwidth = 5, position = "dodge", color = "black") +
labs(title = "Age Distribution by Satisfaction Level", x = "Age Range", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Range.Age, fill = satisfaction.category)) +
geom_histogram(binwidth = 5, position = "dodge", color = "black") +
labs(title = "Age Distribution by Satisfaction Level", x = "Age Range", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Age, fill = satisfaction.category)) +
geom_histogram(binwidth = 5, position = "dodge", color = "black") +
labs(title = "Age Distribution by Satisfaction Level", x = "Age Range", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_histogram(binwidth = 5, position = "dodge", color = "black") +
labs(title = "Age Distribution by Satisfaction Level", x = "Age Range", y = "Count") +
theme_minimal()
hist(d_clean$Range.Age,
main = "Distribution of Satisfaction by Age Group",
xlab = "Age Range",
col = "lightblue",
border = "black",
breaks = 10)
ggplot(d_clean, aes(x = Range.Age, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Age Range", x = "Age Range", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Range.Age, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Age Range (Percentage)", x = "Age Range", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Gender, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Age Range (Percentage)", x = "Age Range", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Age Range (Percentage)", x = "Age Range", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Class (Percentage)", x = "Age Range", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Class (Percentage)", x = "Class", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Age Range", x = "Class", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Gender, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Gender", x = "Gender", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Customer.Type, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Type of Customer (Percentage)", x = "Customer.Type", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Customer.Type, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Type of Customer", x = "Customer.Type", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Customer.Type, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Type of Customer (Percentage)", x = "Customer.Type", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Type.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Type of Travel (Percentage)", x = "Type.of.Travel", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Customer.Type, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Type of Travel", x = "Type.of.Travel", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Type.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Type of Travel", x = "Type.of.Travel", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Type.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Type of Travel (Percentage)", x = "Type.of.Travel", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Type.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Type of Travel", x = "Type.of.Travel", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Class", x = "Class", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Class (Percentage)", x = "Class", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Range.Age, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Age Range (Percentage)", x = "Age Range", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by Class", x = "Class", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Class (Percentage)", x = "Class", y = "Percentage") +
theme_minimal()
hist(d_clean$Flight.Distance,
main = "Distribution of Flight Distance",
xlab = "Age Range",
col = "lightblue",
border = "black",
breaks = 10)
hist(d_clean$Flight.Distance,
main = "Distribution of Flight Distance",
xlab = "Kilometers",
col = "lightblue",
border = "black",
breaks = 10)
d_clean$Range.of.Travel <- cut(d$Flight.Distance,
breaks = c(500, 1500, 3000, 10000),
labels = c("Short", "Medium", "Long", "Extra-long"),
right = FALSE)
d_clean$Range.of.Travel <- cut(d$Flight.Distance,
breaks = c(0, 500, 1500, 3000, 10000),
labels = c("Short", "Medium", "Long", "Extra-long"),
right = FALSE)
d_clean$Range.of.Travel <- cut(d_clean$Flight.Distance,
breaks = c(0, 500, 1500, 3000, 10000),
labels = c("Short", "Medium", "Long", "Extra-long"),
right = FALSE)
summary(d_clean)
view(d_clean)
d_clean
View(d_clean)
ggplot(d_clean, aes(x = Range.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by duration of travel", x = "Range.of.Travel", y = "Count") +
theme_minimal()
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by duration of travel (Percentage)", x = "Range of Travel", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Range.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "dodge", color = "black") +
labs(title = "Satisfaction Level by duration of travel", x = "Range of Travel", y = "Count") +
theme_minimal()
ggplot(d_clean, aes(x = Range.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by duration of travel (Percentage)", x = "Range of Travel", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Class, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Class (Percentage)", x = "Class", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Customer.Type, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Type of Customer (Percentage)", x = "Customer.Type", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Type.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Type of Travel (Percentage)", x = "Type.of.Travel", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Gender, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Gender (Percentage)", x = "Gender", y = "Percentage") +
theme_minimal()
ggplot(d_clean, aes(x = Range.Age, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction Level by Age Range (Percentage)", x = "Age Range", y = "Percentage") +
theme_minimal()
d_eco <- d_clean %>% filter(Class == "Eco")
library(ggplot2)
library(dplyr)
d_eco <- d_clean %>% filter(Class == "Eco")
plot_age <- ggplot(eco_class, aes(x = Range.Age, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction by Age in Eco Class", x = "Age Range", y = "Percentage") +
theme_minimal()
plot_age <- ggplot(d_eco, aes(x = Range.Age, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction by Age in Eco Class", x = "Age Range", y = "Percentage") +
theme_minimal()
plot_age
plot_gender <- ggplot(d_eco, aes(x = Gender, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction by Gender in Eco Class", x = "Gender", y = "Percentage") +
theme_minimal()
plot_flight_distance <- ggplot(d_eco, aes(x = Range.of.Travel, fill = satisfaction.category)) +
geom_histogram(binwidth = 100, position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction by Flight Distance in Eco Class", x = "Flight Distance", y = "Percentage") +
theme_minimal()
plot_gender
plot_flight_distance
plot_flight_distance <- ggplot(d_eco, aes(x = Range.of.Travel, fill = satisfaction.category)) +
geom_bar(position = "fill", color = "black") +
scale_y_continuous(labels = scales::percent_format()) +
labs(title = "Satisfaction by Flight Distance in Eco Class", x = "Flight Distance", y = "Percentage") +
theme_minimal()
plot_flight_distance
long_flights_eco <- d_clean %>% filter(Class == "Eco" & Range.of.Travel == "Long")
View(long_flights_eco)
long_flights_ratings <- long_flights_eco %>%
select(all_of(rating_columns)) %>%
gather(key = “Service”, value = “Rating”) %>%
rating_columns <- c("Inflight.wifi.service", "Departure.Arrival.time.convenient",
"Ease.of.Online.booking", "Gate.location", "Food.and.drink",
"Online.boarding", "Seat.comfort", "Inflight.entertainment",
"On.board.service", "Leg.room.service", "Baggage.handling",
"Checkin.service", "Inflight.service", "Cleanliness")
long_flights_ratings <- long_flights_eco %>%
select(all_of(rating_columns)) %>%
gather(key = "Service", value = "Rating") %>%
group_by(Service, Rating) %>%
summarise(Proportion = n() / nrow(long_flights_eco) * 100)
library(dplyr)
library(ggplot2)
rating_columns <- c("Inflight.wifi.service", "Departure.Arrival.time.convenient",
"Ease.of.Online.booking", "Gate.location", "Food.and.drink",
"Online.boarding", "Seat.comfort", "Inflight.entertainment",
"On.board.service", "Leg.room.service", "Baggage.handling",
"Checkin.service", "Inflight.service", "Cleanliness")
long_flights_ratings <- long_flights_eco %>%
select(all_of(rating_columns)) %>%
gather(key = "Service", value = "Rating") %>%
group_by(Service, Rating) %>%
summarise(Proportion = n() / nrow(long_flights_eco) * 100)
library(dplyr)
library(ggplot2)
library(tidyr) # For pivot_longer()
rating_columns <- c("Inflight.wifi.service", "Departure.Arrival.time.convenient",
"Ease.of.Online.booking", "Gate.location", "Food.and.drink",
"Online.boarding", "Seat.comfort", "Inflight.entertainment",
"On.board.service", "Leg.room.service", "Baggage.handling",
"Checkin.service", "Inflight.service", "Cleanliness")
long_flights_ratings <- long_flights_eco %>%
select(all_of(rating_columns)) %>%
pivot_longer(cols = everything(), names_to = "Service", values_to = "Rating") %>%
group_by(Service, Rating) %>%
summarise(Count = n(), .groups = 'drop') %>%
mutate(Proportion = Count / sum(Count) * 100)
ggplot(long_flights_ratings, aes(x = Service, y = Proportion, fill = as.factor(Rating))) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
geom_text(aes(label = paste0(round(Proportion, 1), "%")),
position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Proportion of Ratings for Various Services (Long Flights, Eco Class)",
x = "Service", y = "Proportion (%)", fill = "Rating") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
library(dplyr)
library(ggplot2)
library(tidyr)
rating_columns <- c("Inflight.wifi.service", "Departure.Arrival.time.convenient",
"Ease.of.Online.booking", "Gate.location", "Food.and.drink",
"Online.boarding", "Seat.comfort", "Inflight.entertainment",
"On.board.service", "Leg.room.service", "Baggage.handling",
"Checkin.service", "Inflight.service", "Cleanliness")
long_flights_ratings <- long_flights_eco %>%
select(all_of(rating_columns)) %>%
pivot_longer(cols = everything(), names_to = "Service", values_to = "Rating") %>%
group_by(Service, Rating) %>%
summarise(Count = n(), .groups = 'drop') %>%
mutate(Proportion = Count / sum(Count) * 1400)
ggplot(long_flights_ratings, aes(x = Service, y = Proportion, fill = as.factor(Rating))) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
geom_text(aes(label = paste0(round(Proportion, 1), "%")),
position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Proportion of Ratings for Various Services (Long Flights, Eco Class)",
x = "Service", y = "Proportion (%)", fill = "Rating") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
library(dplyr)
library(ggplot2)
library(tidyr)
rating_columns <- c("Inflight.wifi.service", "Departure.Arrival.time.convenient",
"Ease.of.Online.booking", "Gate.location", "Food.and.drink",
"Online.boarding", "Seat.comfort", "Inflight.entertainment",
"On.board.service", "Leg.room.service", "Baggage.handling",
"Checkin.service", "Inflight.service", "Cleanliness")
long_flights_ratings <- long_flights_eco %>%
select(all_of(rating_columns)) %>%
pivot_longer(cols = everything(), names_to = "Service", values_to = "Rating") %>%
group_by(Service, Rating) %>%
summarise(Count = n(), .groups = 'drop') %>%
mutate(Proportion = Count / sum(Count) * 14 * 100)
ggplot(long_flights_ratings, aes(x = Service, y = Proportion, fill = as.factor(Rating))) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
geom_text(aes(label = paste0(round(Proportion, 1), "%")),
position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Proportion of Ratings for Various Services (Long Flights, Eco Class)",
x = "Service", y = "Proportion (%)", fill = "Rating") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
